{"version":3,"sources":["firebase/firebase-config.js","components/SidebarChat.js","redux/StateProvider.js","components/Sidebar.js","components/Mainchat.js","redux/reducer.js","components/Login.js","components/App.js","reportWebVitals.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","SidebarChat","id","name","addNewChat","useState","Math","random","avaSeed","messages","setMessages","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","onClick","prompt","to","Avatar","src","message","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","Sidebar","rooms","setRooms","user","unsubscribe","photoURL","IconButton","type","placeholder","room","MainChat","setAvaSeed","msgInput","setMsgInput","roomId","useParams","roomName","setRoomName","console","log","displayName","Date","timestamp","toDate","toString","onSubmit","e","preventDefault","add","FieldValue","serverTimestamp","onChange","target","actionTypes","state","action","Login","dispatch","Button","signInWithPopup","then","result","catch","err","alert","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccc62e4b.chunk.js","sourcesContent":["import firebase from 'firebase'\n\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n    apiKey: \"AIzaSyBALCyH2IZFktMPiZQFDa_J1EDRSgDINHs\",\n    authDomain: \"donus-chat.firebaseapp.com\",\n    projectId: \"donus-chat\",\n    storageBucket: \"donus-chat.appspot.com\",\n    messagingSenderId: \"500052430086\",\n    appId: \"1:500052430086:web:59dfa07f68483a22df2287\",\n    measurementId: \"G-P3HJKJF3X9\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\nconst db = firebaseApp.firestore();\nconst auth = firebase.auth();\nconst provider = new firebase.auth.GoogleAuthProvider();\n\nexport { auth, provider };\nexport default db;","import '../assets/css/SidebarChat.scss';\nimport { Avatar } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\n\nimport db from '../firebase/firebase-config';\n\nfunction SidebarChat({ id, name, addNewChat }) {\n    const [avaSeed, setAvaSeed] = useState(Math.random());\n\n    const createChat = () => {\n        const roomName = prompt(\"Please enter name for the new chat\");\n\n        if (roomName) {\n            // do something\n        } else {\n\n        }\n    }\n\n    const [messages, setMessages] = useState(\"\");\n\n    useEffect(() => {\n        if(id){\n            db.collection('rooms').doc(id).collection('messages')\n                .orderBy('timestamp','desc')\n                .onSnapshot((snapshot) => setMessages(snapshot.docs.map(doc => doc.data())));\n        }\n    },[id]);\n\n    return addNewChat ? (\n        <div className=\"sidebarChat\" onClick={createChat}>\n            <h2>Add new chat</h2>\n        </div>\n    )\n        : (\n            <Link to={\"/rooms/\" + id}>\n                <div className=\"sidebarChat\">\n                    <Avatar src={`https://avatars.dicebear.com/api/bottts/${avaSeed}.svg`} />\n                    <div className=\"sidebarChat_info\">\n                        <h2>{name}</h2>\n                        <p>{messages[0]?.message}</p>\n                    </div>\n                </div>\n            </Link>\n        )\n}\n\nexport default SidebarChat;","import React, { createContext, useContext, useReducer } from \"react\";\n\nexport const StateContext = createContext();\n\nexport const StateProvider = ({ reducer, initialState, children }) => (\n    <StateContext.Provider value = { useReducer(reducer, initialState) }>\n        {children}\n    </StateContext.Provider>\n);\n\nexport const useStateValue = () => useContext(StateContext);","import { useState, useEffect } from 'react';\nimport '../assets/css/Sidebar.scss';\nimport { Avatar, IconButton } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport ChatIcon from '@material-ui/icons/Chat';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\nimport SideBarChat from './SidebarChat';\n\n// firebase\nimport db from '../firebase/firebase-config';\nimport { useStateValue } from '../redux/StateProvider';\n\nfunction Sidebar() {\n\n    const [rooms, setRooms] = useState([]);\n    const [{ user },dispatch] = useStateValue();\n\n    useEffect(()=>{\n        const unsubscribe = db.collection('rooms').onSnapshot((snapshot) => {\n            setRooms(snapshot.docs.map(doc => ({\n                id : doc.id,\n                data : doc.data()\n            })))\n        })\n\n        return () => {\n            unsubscribe();\n        }\n    },[]);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__header\">\n                <div className=\"sidebar__headerLeft\">\n                    <Avatar src = {user?.photoURL}/>\n                </div>\n                <div className=\"sidebar__headerRight\">\n                    <IconButton>\n                        <DonutLargeIcon />\n                    </IconButton>\n\n                    <IconButton>\n                        <ChatIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"sidebar__search\">\n                <div className=\"sidebar__searchContainer\">\n\n                    <SearchOutlined />\n                    <input type=\"text\" placeholder='Search or start new chat' />\n                </div>\n            </div>\n            <div className=\"sidebar__chats\">\n                <SideBarChat addNewChat = {true}/>\n                {rooms.map( room => (\n                    <SideBarChat key = {room.id} id = {room.id} name = {room.data.name} />\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar;","import '../assets/css/Mainchat.scss';\nimport { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { Avatar, IconButton } from '@material-ui/core';\nimport SearchOutlined from '@material-ui/icons/SearchOutlined';\nimport AttachFileIcon from '@material-ui/icons/AttachFile';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\nimport MicIcon from '@material-ui/icons/Mic';\n\nimport db from '../firebase/firebase-config';\nimport firebase from \"firebase\";\nimport { useStateValue } from '../redux/StateProvider';\n\nfunction MainChat() {\n\n    const [avaSeed, setAvaSeed] = useState(Math.random());\n    const [msgInput, setMsgInput] = useState(\"\");\n    const { roomId } = useParams();\n    const [roomName, setRoomName] = useState(\"\");\n    const [messages, setMessages] = useState([]);\n    const [{ user },dispatch] = useStateValue();\n\n    useEffect(() => {\n        if (roomId) {\n            db.collection(\"rooms\")\n                .doc(roomId)\n                .onSnapshot((snapshot) => setRoomName(snapshot.data().name));\n\n            db.collection(\"rooms\").doc(roomId).collection(\"messages\")\n                .orderBy('timestamp', 'asc')\n                .onSnapshot(snapshot => setMessages(snapshot.docs.map(doc => doc.data())));\n        }\n        setAvaSeed(Math.random());\n    }, [roomId]);\n\n    console.log(roomId);\n\n    const sendMessage = (e) => {\n        console.log(msgInput)\n        e.preventDefault();\n        \n        db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\n            message : msgInput,\n            name : user.displayName,\n            timestamp : firebase.firestore.FieldValue.serverTimestamp()\n        })\n        setMsgInput(\"\");\n    }\n\n    return (\n        <div className=\"main_chat\">\n            <div className=\"chat__header\">\n                <Avatar src={`https://avatars.dicebear.com/api/bottts/${avaSeed}.svg`} />\n                <div className=\"chat__headerInfo\">\n                    <h3>{roomName}</h3>\n                    <p>Last seen at ...</p>\n                </div>\n\n                <div className=\"chat__headerRight\">\n                    <IconButton>\n                        <SearchOutlined />\n                    </IconButton>\n\n                    <IconButton>\n                        <AttachFileIcon />\n                    </IconButton>\n                    <IconButton>\n                        <MoreVertIcon />\n                    </IconButton>\n                </div>\n            </div>\n            <div className=\"chat__body\">\n                {\n                    messages.map(message => (\n                        <p className={\"chat__message \" + (message.name == user.displayName && \"chat__receiver\")}>\n                            <span className=\"chat__name\">{message.name}</span>\n                            {message.message}\n                            <span className=\"chat__timestamp\">{\n                                new Date(message.timestamp?.toDate()).toString()\n                            }</span>\n                        </p>\n                    ))\n                }\n            </div>\n            <div className=\"chat__footer\">\n                <InsertEmoticonIcon />\n                <form onSubmit={sendMessage}>\n                    <input type=\"text\" placeholder=\"Type your message here ...\" value={msgInput} onChange={(e) => setMsgInput(e.target.value)} />\n                    <button type=\"submit\">Send</button>\n                </form>\n                <MicIcon />\n            </div>\n        </div>\n    )\n}\n\nexport default MainChat;","export const initialState = {\n    user : null,\n};\n\nexport const actionTypes = {\n    SET_USER : 'SET_USER'\n};\n\nconst reducer = (state, action) => {\n    switch(action.type){\n        case actionTypes.SET_USER:\n            return {\n                ...state,\n                user : action.user\n            };\n\n        default : return state;\n    }\n};\n\nexport default reducer;","import '../assets/css/Login.scss';\nimport { useState, useEffect } from 'react';\nimport { Button } from \"@material-ui/core\";\nimport db, {auth, provider} from '../firebase/firebase-config';\nimport { useStateValue } from '../redux/StateProvider';\nimport { actionTypes } from '../redux/reducer';\n\nfunction Login() {\n\n    const [{},dispatch] = useStateValue();\n\n    const signIn = () => {\n        auth.signInWithPopup(provider).then((result) => {\n            console.log(result);\n            dispatch({\n                type : actionTypes.SET_USER,\n                user : result.user\n            });\n        })\n        .catch(err => alert(err.message));\n    }\n    return (\n        <div className=\"login\">\n            <div className = \"login__container\">\n                <img src = \"https://img.icons8.com/color/452/whatsapp--v1.png\" />\n                <div className = \"login__text\">\n                    <h1>Sign in Donus</h1>\n                </div>\n\n                <Button type = \"submit\" onClick = {signIn}>Sign in with Google</Button>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import { useState } from 'react';\nimport '../assets/css/App.scss';\nimport Sidebar from '../components/Sidebar';\nimport MainChat from './Mainchat';\nimport Login from './Login';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport { useStateValue } from '../redux/StateProvider';\n\nfunction App() {\n\n  const [{ user },dispatch] = useStateValue();\n\n  return (\n    <Router>\n      <div className=\"App\">\n        {user ?\n          <div className=\"app_body\">\n            <Sidebar />\n            <Switch>\n              <Route path=\"/app\">\n                App\n              </Route>\n              <Route path=\"/rooms/:roomId\">\n                <MainChat />\n              </Route>\n            </Switch>\n          </div>\n        : <Login />}\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { StateProvider } from './redux/StateProvider';\nimport reducer, { initialState } from './redux/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider initialState={initialState} reducer={reducer}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}